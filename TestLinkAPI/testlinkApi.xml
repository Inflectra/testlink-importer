<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TestLinkAPI</name>
    </assembly>
    <members>
        <member name="T:Meyn.TestLink.TestCaseResultStatus">
            <summary>
            represent the result of a test case execution
            </summary>
        </member>
        <member name="T:Meyn.TestLink.ActionOnDuplicatedName">
            <summary>
            used for creating test cases to tell Testlink what to do if another test case is found with the same name
            </summary>
        </member>
        <member name="T:Meyn.TestLink.TestLink">
            <summary>
            this is the proxy class to connect to TestLink.
            It provides a list of functions that map straight into the Tstlink API as it stands at V 1.9.2
            </summary>
            <remarks>This class makes use of XML-RPC.NET Copyright (c) 2006 Charles Cook</remarks>
        </member>
        <member name="M:Meyn.TestLink.TestLink.#ctor(System.String,System.String)">
            <summary>
            default constructor 
            </summary>
            <param name="apiKey">developer key as provided by testlink</param>
            <param name="url">url of testlink API. Something like http://localhost/testlink/lib/api/xmlrpc.php</param>
        </member>
        <member name="M:Meyn.TestLink.TestLink.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            constructor with URL and log flag
            </summary>
            <param name="apiKey">developer key as provided by testlink</param>
            <param name="url">url of testlink API. Something like http://localhost/testlink/lib/api/xmlrpc.php </param>
            <param name="log">enable capture of lastRequest and lastResponse for debugging</param>
        </member>
        <member name="M:Meyn.TestLink.TestLink.handleErrorMessage(System.Object)">
            <summary>
             process the response object returned by the Tstlink API for error messages. 
             if it finds one or more error messages it throws a TLINK Exception        ///  
            </summary>
            <param name="errorMessage">the actual message returned by testlink</param>
            <returns>true if it found an error message that matches an errorCodes list
            false if there were no errors</returns>returns>
        </member>
        <member name="M:Meyn.TestLink.TestLink.handleErrorMessage(System.Object,System.Int32[])">
            <summary>
             process the response object returned by the Tstlink API for error messages. 
             if it finds one or more error messages it throws a TLINK Exception        ///  
            </summary>
            <param name="errorMessage">the actual message returned by testlink</param>
            <returns>true if it found an error message that matches an errorCodes list
            false if there were no errors</returns>returns>
            <param name="exceptedErrorCodes">a list of integers that should not result in an exception to be processed</param>
        </member>
        <member name="M:Meyn.TestLink.TestLink.handleErrorMessage(System.Object[],System.Int32[])">
            <summary>
             process the response object returned by the Tstlink API for error messages. 
             if it finds one or more error messages it throws a TLINK Exception        ///  
            </summary>
            <param name="errorMessage">the actual message returned by testlink</param>
            <returns>true if it found an error message that matches an errorCodes list
            false if there were no errors</returns>returns>
            <param name="exceptedErrorCodes">a list of integers that should not result in an exception to be processed</param>
        </member>
        <member name="M:Meyn.TestLink.TestLink.decodeErrors(System.Object[])">
            <summary>
            internal. try to conver the struct to an error message. Return null if it wasn't one
            </summary>
            <param name="messageList"></param>
            <returns>a TLErrorMessage or null</returns>
        </member>
        <member name="M:Meyn.TestLink.TestLink.stateIsValid">
            <summary>
            check that the state of the interface 
            </summary>
        </member>
        <member name="M:Meyn.TestLink.TestLink.GetBuildsForTestPlan(System.Int32)">
            <summary>
            get a list of all builds for a testplan
            </summary>
            <param name="testplanid">the id of the testplan</param>
            <returns>a list (may be empty)</returns>
        </member>
        <member name="M:Meyn.TestLink.TestLink.CreateBuild(System.Int32,System.String,System.String)">
            <summary>
            create a build for a testplan
            </summary>
            <param name="testplanid">id of the test plan</param>
            <param name="buildname">name of the build</param>
            <param name="buildnotes">notes</param>
            <returns>General Result object</returns>
        </member>
        <member name="M:Meyn.TestLink.TestLink.GetLatestBuildForTestPlan(System.Int32)">
            <summary>
            get the newest build for a test plan
            </summary>
            <param name="tplanid">id of testplan</param>
            <returns>a build object</returns>
        </member>
        <member name="M:Meyn.TestLink.TestLink.ReportTCResult(System.Int32,System.Int32,Meyn.TestLink.TestCaseResultStatus,System.Int32,System.String,System.Boolean,System.Boolean,System.String,System.Int32,System.Int32)">
            <summary>
            Record the outcome of a test case execution
            </summary>
            <param name="testcaseid">Id of test case</param>
            <param name="testplanid">Id of test plan</param>
            <param name="status">The result of the test (pass, fail or blocked)</param>
            <param name="platformId">Id of the platform. Optional if platform name is given</param>
            <param name="platformName">name of the platform. Optional if the platform id is given</param>
            <param name="overwrite">if true, then last execution for (testcase,testplan,build,platform) will be overwritten.</param>
            <param name="guess"> (assumed to be true) defining whether to guess optinal params or require them explicitly default is true</param>
            <param name="notes">any notes or info to be added to the description field</param>
            <param name="buildid">If not given, then highest build id willl be used</param>
            <param name="bugid">Id for a bug if used in conjunction with a defect tracker</param>
            <returns></returns>
        </member>
        <member name="M:Meyn.TestLink.TestLink.UploadExecutionAttachment(System.Int32,System.String,System.String,System.Byte[],System.String,System.String)">
            <summary>
            Uploads an attachment for an execution. 
            </summary>
            <remarks>The attachment content must be Base64 encoded by the client before sending it.</remarks>
            <param name="executionId"></param>
            <param name="title">The title of the Attachment </param>
            <param name="description">The description of the Attachment</param>
            <param name="filename">The file name of the Attachment (e.g.:notes.txt)</param>
            <param name="fileType">The file type of the Attachment (e.g.: text/plain)</param>
            <param name="content">The content (Base64 encoded) of the Attachment</param>
            <returns>An AttachmentRequestResponse</returns>
        </member>
        <member name="M:Meyn.TestLink.TestLink.GetLastExecutionResult(System.Int32,System.Int32)">
            <summary>
            get the last execution result
            </summary>
            <param name="testplanid">id of the test plan</param>
            <param name="testcaseid">id of test case</param>
            <returns>a ExecutionResult or null</returns>
        </member>
        <member name="M:Meyn.TestLink.TestLink.DeleteExecution(System.Int32)">
            <summary>
            delete an execution. Current status this API is not fully functioning as it is not clear how to configure testlink to allow this to happen
            </summary>
            <param name="executionid">the id of the test case execution</param>
            <returns>a GeneralResult</returns>
        </member>
        <member name="M:Meyn.TestLink.TestLink.GetTestCase(System.Int32,System.Int32)">
            <summary>
            get a test case by its id
            </summary>
            <param name="testcaseid">Id of the test case</param>
            <param name="versionId">(optional) the version id. If not given the latest version is returned</param>
            <returns></returns>
        </member>
        <member name="M:Meyn.TestLink.TestLink.GetTestCasesForTestSuite(System.Int32,System.Boolean)">
            <summary>
            get test cases contained in a test suite
            </summary>
            <param name="testSuiteid">id of the test suite</param>
            <param name="deep">Set the deep flag to false if you only want test cases in the test suite provided and no child test cases.</param>
            <returns>A list of Test Cases</returns>
        </member>
        <member name="M:Meyn.TestLink.TestLink.GetTestCaseIdsForTestSuite(System.Int32,System.Boolean)">
            <summary>
            get a list of testcase ids of test cases contained in a test suite
            </summary>
            <param name="testSuiteid">id of the test suite</param>
            <param name="deep">Set the deep flag to false if you only want test cases in the test suite provided and no child test cases.</param>
            <returns></returns>
        </member>
        <member name="M:Meyn.TestLink.TestLink.GetTestCaseIDByName(System.String,System.String)">
            <summary>
            ask for a test case by name. 
            </summary>
            <param name="testcasename">the name of the test case</param>
            <param name="testsuitename">the name of the test suite</param>
            <remarks>Searching is case sensitive.</remarks>
            <returns>a list of test cases found</returns>
        </member>
        <member name="M:Meyn.TestLink.TestLink.GetTestCaseIDByName(System.String,System.Int32)">
            <summary>
            get a test cases by this name
            </summary>
            <param name="testcasename">name of the test case (case sensitive)</param>
            <param name="testSuiteId">name of test suite</param>
            <returns>a list containing zero to many test cases with that name that occur in the specific test suite</returns>
        </member>
        <member name="M:Meyn.TestLink.TestLink.GetTestCaseIDByName(System.String)">
            <summary>
            get a list of test case ids with this name. 
            </summary>
            <param name="testcasename">name of the test case (case sensitive)</param>
            <returns>a list containing zero to many test case id objects with that name</returns>
        </member>
        <member name="M:Meyn.TestLink.TestLink.CreateTestCase(System.String,System.Int32,System.String,System.Int32,System.String,System.String,System.Int32,System.Boolean,Meyn.TestLink.ActionOnDuplicatedName,System.Int32,System.Int32)">
            <summary>
            create a new Testcase without having to specify test steps
            </summary>
            <summary>
            Create a new Test Case
            </summary>
            <param name="authorLogin">login id of test case author</param>
            <param name="testsuiteid">Id of test suite</param>
            <param name="testcasename">name of test case</param>
            <param name="testprojectid">id of test project</param>
            <param name="summary">summary of result</param>
            <param name="keywords"></param>
            <param name="order">defaultOrder = 0, otherwise location in sequence to other testcases</param>
            <param name="checkduplicatedname">1=yes, 0=no</param>
            <param name="actiononduplicatedname">one of block, generate_new, create_new_version</param>
            <param name="executiontype">manual:1, automated: 2, </param>
            <param name="importance">Importance of test case</param>
        </member>
        <member name="M:Meyn.TestLink.TestLink.CreateTestCase(System.String,System.Int32,System.String,System.Int32,System.String,Meyn.TestLink.TestStep[],System.String,System.Int32,System.Boolean,Meyn.TestLink.ActionOnDuplicatedName,System.Int32,System.Int32)">
            <summary>
            Create a new Test Case
            </summary>
            <param name="authorLogin">login id of test case author</param>
            <param name="testsuiteid">Id of test suite</param>
            <param name="testcasename">name of test case</param>
            <param name="testprojectid">id of test project</param>
            <param name="summary">summary of result</param>
            <param name="steps">Array of test steps</param>
            <param name="keywords"></param>
            <param name="order">defaultOrder = 0, otherwise location in sequence to other testcases</param>
            <param name="checkduplicatedname">1=yes, 0=no</param>
            <param name="actiononduplicatedname">one of block, generate_new, create_new_version</param>
            <param name="executiontype">manual:1, automated: 2, </param>
            <param name="importance">Importance of test case</param>
        </member>
        <member name="M:Meyn.TestLink.TestLink.addTestCaseToTestPlan(System.Int32,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            add a test case to a test plan (no way of removing one)
            </summary>
            <param name="testprojectid"></param>
            <param name="testplanid"></param>
            <param name="testcaseexternalid">the id that is displayed on the GUI</param>
            <param name="version"></param>
            <param name="platformid"></param>
            <returns></returns>
            <remarks>this testExternalid is a string and a concatenation of the 
            test project prefix and the externalid that is reported in the test case creation.
            </remarks>
        </member>
        <member name="M:Meyn.TestLink.TestLink.UploadTestCaseAttachment(System.Int32,System.String,System.String,System.Byte[],System.String,System.String)">
            <summary>
            upload an attachment for a test case
            </summary>
            <param name="testcaseid"></param>
            <param name="filename"></param>
            <param name="fileType"></param>
            <param name="content"></param>
            <param name="title"></param>
            <param name="description"></param>
            <returns></returns>
        </member>
        <member name="M:Meyn.TestLink.TestLink.GetTestCaseAttachments(System.Int32)">
            <summary>
            retrieve the attachments for a test case
            </summary>
            <param name="testCaseId"></param>
            <returns></returns>
        </member>
        <member name="M:Meyn.TestLink.TestLink.GetTestCasesForTestPlan(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.String)">
            <summary>
            get all test cases for a test plan .
            </summary>
            <remarks> The same test case id can show up multiple times, once per platform.</remarks>
            <param name="testplanid"></param>
            <param name="testcaseid"></param>
            <param name="buildid"></param>
            <param name="keywordid"></param>
            <param name="executed"></param>
            <param name="assignedTo"></param>
            <param name="executedstatus"></param>
            <returns></returns>
        </member>
        <member name="M:Meyn.TestLink.TestLink.GetTestCasesForTestPlan(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32)">
            <summary>
            get all test cases for a test plan .
            </summary>
            <remarks> The same test case id can show up multiple times, once per platform.</remarks>
            <param name="testplanid"></param>
            <param name="testcaseid"></param>
            <param name="buildid"></param>
            <param name="keywordid"></param>
            <param name="executed"></param>
            <param name="assignedTo"></param>
            <returns></returns>
        </member>
        <member name="M:Meyn.TestLink.TestLink.GetTestCasesForTestPlan(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            get all test cases for a test plan .
            </summary>
            <remarks> The same test case id can show up multiple times, once per platform.</remarks>
            <param name="testplanid"></param>
            <param name="testcaseid"></param>
            <param name="buildid"></param>
            <param name="keywordid"></param>
            <param name="executed"></param>
            <returns></returns>
        </member>
        <member name="M:Meyn.TestLink.TestLink.GetTestCasesForTestPlan(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            get all test cases for a test plan .
            </summary>
            <remarks> The same test case id can show up multiple times, once per platform.</remarks>
            <param name="testplanid"></param>
            <param name="testcaseid"></param>
            <param name="buildid"></param>
            <param name="keywordid"></param>
            <returns></returns>
        </member>
        <member name="M:Meyn.TestLink.TestLink.GetTestCasesForTestPlan(System.Int32,System.Int32,System.Int32)">
            <summary>
            get all test cases for a test plan .
            </summary>
            <remarks> The same test case id can show up multiple times, once per platform.</remarks>
            <param name="testplanid"></param>
            <param name="testcaseid"></param>
            <param name="buildid"></param>
            <returns></returns>
        </member>
        <member name="M:Meyn.TestLink.TestLink.GetTestCasesForTestPlan(System.Int32,System.Int32)">
            <summary>
            get all test cases for a test plan .
            </summary>
            <remarks> The same test case id can show up multiple times, once per platform.</remarks>
            <param name="testplanid"></param>
            <param name="testcaseid"></param>
            <returns></returns>
        </member>
        <member name="M:Meyn.TestLink.TestLink.GetTestCasesForTestPlan(System.Int32)">
            <summary>
            get all test cases for a test plan
            </summary>
            <param name="testplanid"></param>
            <returns>List of test cases with test plan data added</returns>
        </member>
        <member name="M:Meyn.TestLink.TestLink.GetProjectTestPlans(System.Int32)">
            <summary>
            get a list of all testplans for a project
            </summary>
            <param name="projectid"></param>
            <returns></returns>
        </member>
        <member name="M:Meyn.TestLink.TestLink.getTestPlanByName(System.String,System.String)">
            <summary>
            get a test plan for a project
            </summary>
            <param name="projectname">the name of the owning project</param>
            <param name="planName"></param>
            <returns>a TestPlan or Null</returns>
        </member>
        <member name="M:Meyn.TestLink.TestLink.GetTotalsForTestPlan(System.Int32)">
            <summary>
            get totals for a testplan
            </summary>
            <param name="testplanid"></param>
            <remarks>If a test plan has no executions to it you will still get a list iwth a single item. That item will have zeros in its totals</remarks>
            <returns></returns>
        </member>
        <member name="M:Meyn.TestLink.TestLink.GetTestPlanPlatforms(System.Int32)">
             <summary>
             get a list of all platforms for a test plan.
            
             </summary>
             <remarks>Throws an exception of type Testlink Exception</remarks>
             <param name="testplanid"></param>
             <returns>a list of testplan platforms</returns>
        </member>
        <member name="M:Meyn.TestLink.TestLink.CreateTestPlan(System.String,System.String,System.String,System.Boolean)">
            <summary>
            create a new Testplan 
            </summary>
            <param name="testplanname">the name of the plan</param>
            <param name="testProjectName">the name of the test project that contains the test plan</param>
            <param name="notes"></param>
            <param name="active">whether this plan is currently active</param>
            <returns></returns>
        </member>
        <member name="M:Meyn.TestLink.TestLink.GetProjects">
            <summary>
            get a list of all projects
            </summary>
            <returns></returns>
        </member>
        <member name="M:Meyn.TestLink.TestLink.GetProject(System.String)">
            <summary>
            get a single Project
            </summary>
            <param name="projectname"></param>
            <returns>a Project or Null</returns>
        </member>
        <member name="M:Meyn.TestLink.TestLink.UploadTestProjectAttachment(System.Int32,System.String,System.String,System.Byte[],System.String,System.String)">
            <summary>
            upload an attachment to a test project
            </summary>
            <param name="executionId"></param>
            <param name="filename"></param>
            <param name="fileType"></param>
            <param name="content"></param>
            <param name="title"></param>
            <param name="description"></param>
            <returns></returns>
        </member>
        <member name="M:Meyn.TestLink.TestLink.CreateProject(System.String,System.String,System.String)">
            <summary>
            create a new project
            </summary>
            <param name="projectname"></param>
            <param name="testcasePrefix">prefix for test case ids</param>
            <param name="notes"></param>
            <returns>a general result</returns>
        </member>
        <member name="M:Meyn.TestLink.TestLink.GetTestSuitesForTestPlan(System.Int32)">
            <summary>
            get test suites for a test plan
            </summary>
            <param name="testplanid"></param>
            <returns></returns>
        </member>
        <member name="M:Meyn.TestLink.TestLink.GetFirstLevelTestSuitesForTestProject(System.Int32)">
            <summary>
            get all top level test suites for a test project
            </summary>
            <param name="testprojectid"></param>
            <returns></returns>
        </member>
        <member name="M:Meyn.TestLink.TestLink.GetTestSuiteById(System.Int32)">
            <summary>
            get a test suite by its id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Meyn.TestLink.TestLink.CreateTestSuite(System.Int32,System.String,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            create a new test suite
            </summary>
            <param name="testprojectid">id of test project</param>
            <param name="testsuitename">Name of this test suite</param>
            <param name="details"></param>
            <param name="parentId">parent test suite id. Optional</param>
            <param name="order">display order with sibling test suites. Optional</param>
            <param name="checkduplicatedname">if true, throw an error of a duplicate name exists. Optional, default=true</param>
            <returns></returns>
        </member>
        <member name="M:Meyn.TestLink.TestLink.UploadTestSuiteAttachment(System.Int32,System.String,System.String,System.Byte[],System.String,System.String)">
            <summary>
            upload an attachment for a test case
            </summary>
            <param name="testsuiteid"></param>
            <param name="filename"></param>
            <param name="fileType"></param>
            <param name="content"></param>
            <param name="title"></param>
            <param name="description"></param>
            <returns></returns>
        </member>
        <member name="M:Meyn.TestLink.TestLink.SayHello">
            <summary>
            basic Ping
            </summary>
            <returns></returns>
        </member>
        <member name="M:Meyn.TestLink.TestLink.about">
            <summary>
            Gets info about the API
            </summary>
            <returns></returns>
        </member>
        <member name="M:Meyn.TestLink.TestLink.checkDevKey(System.String)">
            <summary>
            check if Developer Key exists
            </summary>
            <param name="devkey"></param>
            <returns>true if key exists</returns>
        </member>
        <member name="M:Meyn.TestLink.TestLink.DoesUserExist(System.String)">
            <summary>
            check for user id to see whether it exists
            </summary>
            <param name="username"></param>
            <returns></returns>
        </member>
        <member name="P:Meyn.TestLink.TestLink.LastRequest">
            <summary>
            last xmlrpc request sent to testlink. only works if constructor was called with argument log set to true
            </summary>
        </member>
        <member name="P:Meyn.TestLink.TestLink.LastResponse">
            <summary>
            debug last response reseved from testlink xmlrpc call. Only works if constructor was called with argument log set to true
            </summary>
        </member>
        <member name="T:Meyn.TestLink.ITestLink">
            <summary>
            the interface mapping required for the XmlRpc api of testlink. 
            This interface is used by the TestLink class. 
            </summary>
            <remarks>This class makes use of XML-RPC.NET Copyright (c) 2006 Charles Cook</remarks>
        </member>
        <member name="M:Meyn.TestLink.ITestLink.getTestCase(System.String,System.Int32)">
            <summary>
            get test case specification using external or internal id. returns last version
            </summary>
            <param name="devKey"></param>
            <param name="testcaseid"></param>
            <returns></returns>
        </member>
        <member name="M:Meyn.TestLink.ITestLink.getTestCase(System.String,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="devKey"></param>
            <param name="testcaseid"></param>
            <param name="version"></param>
            <returns></returns>
        </member>
        <member name="M:Meyn.TestLink.ITestLink.deleteExecution(System.String,System.Int32)">
            <summary>
            delete an execution
            </summary>
            <param name="devKey"></param>
            <param name="executionid"></param>
            <returns> mixed $resultInfo 
            				[status]	=> true/false of success
            				[id]		  => result id or error code
            				[message]	=> optional message for error message string</returns>
        </member>
        <member name="M:Meyn.TestLink.ITestLink.getTestPlanPlatforms(System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="devKey"></param>
            <param name="testplanid"></param>
            <returns></returns>
        </member>
        <member name="M:Meyn.TestLink.ITestLink.getTotalsForTestPlan(System.String,System.Int32)">
            <summary>
            Gets the summarized results grouped by platform
            </summary>
            <param name="devKey"></param>
            <param name="testplanid"></param>
            <returns>map where every element has:
            	 *
            	 *	'type' => 'platform'
            	 *	'total_tc => ZZ
            	 *	'details' => array ( 'passed' => array( 'qty' => X)
            	 *	                     'failed' => array( 'qty' => Y)
            	 *	                     'blocked' => array( 'qty' => U)
            	 *                       ....)</returns>
        </member>
        <member name="M:Meyn.TestLink.ITestLink.sayHello">
            <summary>
            simple Ping.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Meyn.TestLink.ITestLink.doesUserExist(System.String,System.String)">
            <summary>
            checks user exists
            </summary>
            <param name="devKey"></param>
            <param name="user"></param>
            <returns>true if everything OK, otherwise error structure</returns>
        </member>
        <member name="M:Meyn.TestLink.ITestLink.checkDevKey(System.String)">
            <summary>
            
            </summary>
            <param name="devKey"></param>
            <returns>true if everything OK, otherwise error structure</returns>
        </member>
        <member name="M:Meyn.TestLink.ITestLink.getFullPath(System.String,System.Int32)">
            <summary>
            Gets full path from the given node till the top using nodes_hierarchy_table
            </summary>
            <param name="devKey"></param>
            <param name="nodeID"></param>
            <returns></returns>
        </member>
        <member name="T:Meyn.TestLink.TestLinkException">
            <summary>
            basic exception thrown whenever Testlink returns an error
            </summary>
        </member>
        <member name="M:Meyn.TestLink.TestLinkException.#ctor">
            <summary>
            basic Constructor
            </summary>
        </member>
        <member name="M:Meyn.TestLink.TestLinkException.#ctor(System.String,System.Exception)">
            <summary>
            vConstructor that can take an inner exception
            </summary>
            <param name="msg"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Meyn.TestLink.TestLinkException.#ctor(System.Collections.Generic.List{Meyn.TestLink.TLErrorMessage})">
            <summary>
            constructor that takes a list of error messages
            </summary>
            <param name="errs"></param>
        </member>
        <member name="M:Meyn.TestLink.TestLinkException.#ctor(System.String,System.Collections.Generic.List{Meyn.TestLink.TLErrorMessage})">
            <summary>
            constructor 
            </summary>
            <param name="msg"></param>
            <param name="errs"></param>
        </member>
        <member name="M:Meyn.TestLink.TestLinkException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:Meyn.TestLink.TestLinkException.#ctor(System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="fmt"></param>
            <param name="args"></param>
        </member>
        <member name="F:Meyn.TestLink.TestLinkException.errors">
            <summary>
            temporarily stores current errors
            </summary>
        </member>
        <member name="T:Meyn.TestLink.TL_Data">
            <summary>
            base class for all response classes from the TL Api
            </summary>
        </member>
        <member name="M:Meyn.TestLink.TL_Data.toInt(CookComputing.XmlRpc.XmlRpcStruct,System.String)">
            <summary>
            robust convert to int. can take int strings as well as ints 
            </summary>
            <param name="data"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Meyn.TestLink.TL_Data.toBool(CookComputing.XmlRpc.XmlRpcStruct,System.String)">
            <summary>
            robust convert a data bit to a bool 
            </summary>
            <param name="data"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Meyn.TestLink.TL_Data.toExecStatus(CookComputing.XmlRpc.XmlRpcStruct,System.String)">
            <summary>
            parse an execution status 
            </summary>
            <param name="data"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Meyn.TestLink.TL_Data.toDate(CookComputing.XmlRpc.XmlRpcStruct,System.String)">
            <summary>
             robust convert a date string
            </summary>
            <param name="data">key value dictionary</param>
            <param name="name">name of field to use</param>
            <returns></returns>
        </member>
        <member name="M:Meyn.TestLink.TL_Data.toChar(CookComputing.XmlRpc.XmlRpcStruct,System.String)">
            <summary>
            convert a data value to a single char
            </summary>
            <param name="data"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:Meyn.TestLink.TLErrorMessage">
            <summary>
            package an the error message returned by the API
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TLErrorMessage.code">
            <summary>
            the testlink error code. See testlink API documentation.
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TLErrorMessage.message">
            <summary>
            the testlink error message returned
            </summary>
        </member>
        <member name="T:Meyn.TestLink.Attachment">
            <summary>
            The object returned from Testlinkt when requesting an attachment
            </summary>
        </member>
        <member name="T:Meyn.TestLink.Build">
            <summary>
            Build information returned by Testlink
            </summary>
        </member>
        <member name="F:Meyn.TestLink.Build.id">
            <summary>
            build ID
            </summary>
        </member>
        <member name="F:Meyn.TestLink.Build.active">
            <summary>
            true if the build is active
            </summary>
        </member>
        <member name="F:Meyn.TestLink.Build.name">
            <summary>
            build name
            </summary>
        </member>
        <member name="F:Meyn.TestLink.Build.notes">
            <summary>
            any build notes
            </summary>
        </member>
        <member name="F:Meyn.TestLink.Build.testplan_id">
            <summary>
            the test plan the build is associated with
            </summary>
        </member>
        <member name="F:Meyn.TestLink.Build.is_open">
            <summary>
            true if the build is currently open
            </summary>
        </member>
        <member name="T:Meyn.TestLink.TestCaseFromTestPlan">
            <summary>
            test cases as they are returned from a test plan
            </summary>
            <remarks>This is different from TestCase as it returns additional info from the testplan. 
            Maybe this should be refactored with a testplandetails subclass</remarks>
        </member>
        <member name="F:Meyn.TestLink.TestCaseFromTestPlan.active">
            <summary>
            marks the test case as active
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestCaseFromTestPlan.assigned_build_id">
            <summary>
            the build id the test case is assigned to
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestCaseFromTestPlan.executed">
            <summary>
            
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestCaseFromTestPlan.execution_ts">
            <summary>
            timestamp when it was executed. blank if not yet executeed
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestCaseFromTestPlan.execution_run_type">
            <summary>
            actual execution type on last run 1=manual, 2 = automatic
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestCaseFromTestPlan.execution_type">
            <summary>
            the execution type set in the test case  1=manual, 2 = automatic
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestCaseFromTestPlan.exec_on_build">
            <summary>
            build id where it was last executed on
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestCaseFromTestPlan.exec_on_tplan">
            <summary>
            test plan id where it was last executed
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestCaseFromTestPlan.exec_status">
            <summary>
            the last execution status
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestCaseFromTestPlan.external_id">
            <summary>
            the id displayed on the UI, but without hte prefix
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestCaseFromTestPlan.priority">
            <summary>
            //the priority assigned in the test case(?)
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestCaseFromTestPlan.status">
            <summary>
            not clear what this is. It is NOT the same as the status in the other test case classes
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestCaseFromTestPlan.tcversion_number">
            <summary>
            
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestCaseFromTestPlan.urgency">
            <summary>
            urgency set in test plan
            </summary>
        </member>
        <member name="M:Meyn.TestLink.TestCaseFromTestPlan.GenerateFromResponse(CookComputing.XmlRpc.XmlRpcStruct)">
            <summary>
            This is used for the call GetTestCasesForTestPlan
            using the returned list from TestLink, generate a list of data
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="T:Meyn.TestLink.TestCaseFromTestSuite">
            <summary>
            test case as it is retrieved from testsuite
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestCaseFromTestSuite.id">
            <summary>
            test case id
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestCaseFromTestSuite.version">
            <summary>
            the version of the test case, starts with 1
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestCaseFromTestSuite.tcversion_id">
            <summary>
            the internal id of this testcase version
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestCaseFromTestSuite.layout">
            <summary>
            not clear what this represents
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestCaseFromTestSuite.status">
            <summary>
            not clear in its meaning
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestCaseFromTestSuite.external_id">
            <summary>
            the id that is displayed on the UI, sans the prefix
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestCaseFromTestSuite.testSuite_id">
            <summary>
            the id of the owning testsuite
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestCaseFromTestSuite.is_open">
            <summary>
            unknown purpose
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestCaseFromTestSuite.modification_ts">
            <summary>
            
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestCaseFromTestSuite.updater_id">
            <summary>
            
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestCaseFromTestSuite.execution_type">
            <summary>
            manual or automatic
            </summary>
        </member>
        <member name="T:Meyn.TestLink.TestCase">
            <summary>
            test cases as they are returned from the getTestCase API call
            </summary>
            <remarks>This is different from other calls that return TestCases </remarks>
        </member>
        <member name="T:Meyn.TestLink.TestStep">
            <summary>
            represent a single test step in a test case
            
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestStep.id">
            <summary>
            interenal primary key. 
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestStep.step_number">
            <summary>
            step number. Starts at 1
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestStep.actions">
            <summary>
            string describing the actions
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestStep.expected_results">
            <summary>
             string desribing the expected result in this step
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestStep.active">
            <summary>
            flag whether this step is active
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestStep.execution_type">
            <summary>
            1=manual or 2=automated
            </summary>
        </member>
        <member name="M:Meyn.TestLink.TestStep.#ctor(CookComputing.XmlRpc.XmlRpcStruct)">
            <summary>
            constructor used by the XML Rpc return
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Meyn.TestLink.TestStep.#ctor(System.Int32,System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            constructor used when defining new steps when creating testcases
            </summary>
            <param name="stepNr">sequential id, start with 1</param>
            <param name="actions">formatted text, use html style text format tags</param>
            <param name="expectedResult">formatted text, use html style text format tags</param>
            <param name="isActive">set to true</param>
            <param name="executionType">1=manual, 2=automatic</param>
        </member>
        <member name="T:Meyn.TestLink.GeneralResult">
            <summary>
            returned when creating new TestProjects, TestCases, projects etc
            </summary>
        </member>
        <member name="F:Meyn.TestLink.GeneralResult.operation">
            <summary>
            the name of the operation carried out
            </summary>
        </member>
        <member name="F:Meyn.TestLink.GeneralResult.status">
            <summary>
            a status. True means good
            </summary>
        </member>
        <member name="F:Meyn.TestLink.GeneralResult.id">
            <summary>
            id of an object involved in the operation. e.g. test case id
            </summary>
        </member>
        <member name="F:Meyn.TestLink.GeneralResult.additionalInfo">
            <summary>
            Any potential additional information
            </summary>
        </member>
        <member name="F:Meyn.TestLink.GeneralResult.message">
            <summary>
            the message returned by Testlink
            </summary>
        </member>
        <member name="M:Meyn.TestLink.GeneralResult.#ctor(System.String,System.Boolean)">
            <summary>
            used by the Exporter class
            </summary>
            <param name="message"></param>
            <param name="status"></param>
        </member>
        <member name="M:Meyn.TestLink.GeneralResult.#ctor">
            <summary>
            conbstructor used to represent an empty response
            </summary>
        </member>
        <member name="T:Meyn.TestLink.AdditionalInfo">
            <summary>
            Additional Info is provided in some cases when objects are created.
            <see cref="T:Meyn.TestLink.GeneralResult"/>
            </summary>
        </member>
        <member name="F:Meyn.TestLink.AdditionalInfo.new_name">
            <summary>
            new namee given
            </summary>
        </member>
        <member name="F:Meyn.TestLink.AdditionalInfo.status_ok">
            <summary>
            true means good
            </summary>
        </member>
        <member name="F:Meyn.TestLink.AdditionalInfo.msg">
            <summary>
            extra message, e.g."Created new version 2"	
            </summary>
        </member>
        <member name="F:Meyn.TestLink.AdditionalInfo.external_id">
            <summary>
            external id if used
            </summary>
        </member>
        <member name="F:Meyn.TestLink.AdditionalInfo.id">
            <summary>
            internal id
            </summary>
        </member>
        <member name="F:Meyn.TestLink.AdditionalInfo.version_number">
            <summary>
            version number in test cases
            </summary>
        </member>
        <member name="F:Meyn.TestLink.AdditionalInfo.has_duplicate">
            <summary>
            true if a duplicate exists
            </summary>
        </member>
        <member name="M:Meyn.TestLink.AdditionalInfo.#ctor(CookComputing.XmlRpc.XmlRpcStruct)">
            <summary>
            constructor used by XMLRPC interface on decoding the function return
            </summary>
            <param name="data">data returned by Testlink</param>
        </member>
        <member name="T:Meyn.TestLink.TestSuite">
            <summary>
            represent a folder in the test specification tree
            
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestSuite.id">
            <summary>
            internal primary key
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestSuite.name">
            <summary>
            name of test suite
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestSuite.parentId">
            <summary>
            foreign key to parent
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestSuite.nodeTypeId">
            <summary>
            internal value 
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestSuite.nodeOrder">
            <summary>
            sequence id for ordering folders in tree
            </summary>
        </member>
        <member name="M:Meyn.TestLink.TestSuite.#ctor(CookComputing.XmlRpc.XmlRpcStruct)">
            <summary>
            constructor used by XMLRPC interface on decoding the function return
            </summary>
            <param name="data">data returned by Testlink</param>
        </member>
        <member name="T:Meyn.TestLink.ExecutionResult">
            <summary>
            Represent the recorded outcome of a test case execution.
            </summary>
        </member>
        <member name="F:Meyn.TestLink.ExecutionResult.id">
            <summary>
            internal id
            </summary>
        </member>
        <member name="F:Meyn.TestLink.ExecutionResult.execution_ts">
            <summary>
            timestamp of execution
            </summary>
        </member>
        <member name="F:Meyn.TestLink.ExecutionResult.execution_type">
            <summary>
            execution type, 1=manual, 2=automatic
            </summary>
        </member>
        <member name="F:Meyn.TestLink.ExecutionResult.build_id">
            <summary>
            id of the build this was run against
            </summary>
        </member>
        <member name="F:Meyn.TestLink.ExecutionResult.testplan_id">
            <summary>
            id of testplan
            </summary>
        </member>
        <member name="F:Meyn.TestLink.ExecutionResult.tcversion_id">
            <summary>
            version id of test case
            </summary>
        </member>
        <member name="F:Meyn.TestLink.ExecutionResult.notes">
            <summary>
            notes provided 
            </summary>
        </member>
        <member name="F:Meyn.TestLink.ExecutionResult.tester_id">
            <summary>
            id of tester
            </summary>
        </member>
        <member name="F:Meyn.TestLink.ExecutionResult.tcversion_number">
            <summary>
            external version number
            </summary>
        </member>
        <member name="F:Meyn.TestLink.ExecutionResult.status">
            <summary>
            status, p=pass, f=fail, b=blocked
            </summary>
        </member>
        <member name="M:Meyn.TestLink.ExecutionResult.#ctor(CookComputing.XmlRpc.XmlRpcStruct)">
            <summary>
            constructor used by XMLRPC interface on decoding the function return
            </summary>
            <param name="data">data returned by Testlink</param>
        </member>
        <member name="T:Meyn.TestLink.AttachmentRequestResponse">
            <summary>
            this is returned as a response to an attachment request
            </summary>
        </member>
        <member name="F:Meyn.TestLink.AttachmentRequestResponse.linkedTableName">
            <summary>
            the name of the table containing hte event this is attached to (an execution for instance)
            </summary>
        </member>
        <member name="F:Meyn.TestLink.AttachmentRequestResponse.foreignKeyId">
            <summary>
            the foreign key
            </summary>
        </member>
        <member name="F:Meyn.TestLink.AttachmentRequestResponse.title">
            <summary>
            title of the attachment
            </summary>
        </member>
        <member name="F:Meyn.TestLink.AttachmentRequestResponse.description">
            <summary>
            description 
            </summary>
        </member>
        <member name="F:Meyn.TestLink.AttachmentRequestResponse.file_name">
            <summary>
            filename 
            </summary>
        </member>
        <member name="F:Meyn.TestLink.AttachmentRequestResponse.size">
            <summary>
            size in bytes
            </summary>
        </member>
        <member name="F:Meyn.TestLink.AttachmentRequestResponse.file_type">
            <summary>
            mime type
            </summary>
        </member>
        <member name="M:Meyn.TestLink.AttachmentRequestResponse.#ctor(CookComputing.XmlRpc.XmlRpcStruct)">
            <summary>
            constructor used by XMLRPC interface on decoding the function return
            </summary>
            <param name="data">data returned by Testlink</param>
        </member>
        <member name="T:Meyn.TestLink.TestProject">
            <summary>
            represent a test project object in testlink
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestProject.id">
            <summary>
            internal id
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestProject.notes">
            <summary>
            notes
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestProject.color">
            <summary>
            
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestProject.active">
            <summary>
            
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestProject.option_reqs">
            <summary>
            true of requirements feature is enabled
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestProject.option_priority">
            <summary>
            true if priority feature is enabled
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestProject.prefix">
            <summary>
            string prefix for test cases
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestProject.tc_counter">
            <summary>
            
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestProject.option_automation">
            <summary>
            true if automation is enabled
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestProject.option_inventory">
            <summary>
            true of inventory is enabled
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestProject.name">
            <summary>
            project name
            </summary>
        </member>
        <member name="M:Meyn.TestLink.TestProject.#ctor(CookComputing.XmlRpc.XmlRpcStruct)">
            <summary>
            constructor used by XMLRPC interface on decoding the function return
            </summary>
            <param name="data">data returned by Testlink</param>
        </member>
        <member name="T:Meyn.TestLink.TestPlan">
            <summary>
            represent a test plan
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestPlan.active">
            <summary>
            True if thest plan is currently active
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestPlan.open">
            <summary>
            
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestPlan.is_public">
            <summary>
            
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestPlan.name">
            <summary>
            
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestPlan.testproject_id">
            <summary>
            foreign key to test project
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestPlan.notes">
            <summary>
            
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestPlan.id">
            <summary>
            primary key
            </summary>
        </member>
        <member name="M:Meyn.TestLink.TestPlan.#ctor(CookComputing.XmlRpc.XmlRpcStruct)">
            <summary>
            constructor used by XMLRPC interface on decoding the function return
            </summary>
            <param name="data">data returned by Testlink</param>
        </member>
        <member name="T:Meyn.TestLink.TestCaseId">
            <summary>
            view of test case identifiers returned by the api call GetTestCaseIdByName
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestCaseId.tc_external_id">
            <summary>
            the externally visible id without the prefix
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestCaseId.name">
            <summary>
            
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestCaseId.parent_id">
            <summary>
            that would be the id of the owning item in the nodes hierarchy table (i.e. the folder id)
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestCaseId.id">
            <summary>
            test case internal id
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestCaseId.tsuite_name">
            <summary>
            name of the test suite that contains the test case
            </summary>
        </member>
        <member name="T:Meyn.TestLink.TestPlatform">
            <summary>
            Represents a platform against which a test result can be recorded
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestPlatform.id">
            <summary>
            primary key
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestPlatform.name">
            <summary>
            
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestPlatform.notes">
            <summary>
            
            </summary>
        </member>
        <member name="M:Meyn.TestLink.TestPlatform.#ctor(CookComputing.XmlRpc.XmlRpcStruct)">
            <summary>
            
            </summary>
            <param name="data"></param>
        </member>
        <member name="T:Meyn.TestLink.TestPlanTotal">
            <summary>
            summary results for the execution of a testplan.
            
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestPlanTotal.Type">
            <summary>
            category name
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestPlanTotal.Name">
            <summary>
            category value
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestPlanTotal.Total_tc">
            <summary>
            total test cases that are covered in this test plan
            </summary>
        </member>
        <member name="F:Meyn.TestLink.TestPlanTotal.Details">
            <summary>
            Dictionary with execution totals
            </summary>
        </member>
    </members>
</doc>
